// <auto-generated />
using System;
using API.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace API.Data.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("API.Entities.Faktura", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("Broj")
                        .HasColumnType("integer");

                    b.Property<DateTime>("Datum")
                        .HasColumnType("timestamp with time zone");

                    b.Property<float>("IznosBezPdv")
                        .HasColumnType("real");

                    b.Property<float>("IznosSaRabatomBezPdv")
                        .HasColumnType("real");

                    b.Property<string>("Partner")
                        .HasColumnType("text");

                    b.Property<float>("Pdv")
                        .HasColumnType("real");

                    b.Property<float>("PostoRabata")
                        .HasColumnType("real");

                    b.Property<float>("Rabat")
                        .HasColumnType("real");

                    b.Property<float>("Ukupno")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.HasIndex("Broj")
                        .IsUnique();

                    b.ToTable("Fakture");
                });

            modelBuilder.Entity("API.Entities.StavkaFakture", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<float>("Cijena")
                        .HasColumnType("real");

                    b.Property<int>("FakturaId")
                        .HasColumnType("integer");

                    b.Property<float>("IznosBezPdv")
                        .HasColumnType("real");

                    b.Property<float>("IznosSaRabatomBezPdv")
                        .HasColumnType("real");

                    b.Property<int>("Kolicina")
                        .HasColumnType("integer");

                    b.Property<string>("NazivArtikla")
                        .HasColumnType("text");

                    b.Property<float>("Pdv")
                        .HasColumnType("real");

                    b.Property<float>("PostoRabata")
                        .HasColumnType("real");

                    b.Property<float>("Rabat")
                        .HasColumnType("real");

                    b.Property<int>("Rbr")
                        .HasColumnType("integer");

                    b.Property<float>("Ukupno")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.HasIndex("FakturaId");

                    b.ToTable("StavkeFakture");
                });

            modelBuilder.Entity("API.Entities.StavkaFakture", b =>
                {
                    b.HasOne("API.Entities.Faktura", "Faktura")
                        .WithMany("StavkeFakture")
                        .HasForeignKey("FakturaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Faktura");
                });

            modelBuilder.Entity("API.Entities.Faktura", b =>
                {
                    b.Navigation("StavkeFakture");
                });
#pragma warning restore 612, 618
        }
    }
}
